<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: provider/v1alpha/provider.proto

namespace Dotbcrm\Apis\Iam\Provider\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Password requirements
 *
 * Generated from protobuf message <code>dotbcrm.apis.iam.provider.v1alpha.PasswordRequirements</code>
 */
class PasswordRequirements extends \Google\Protobuf\Internal\Message
{
    /**
     * Minimum length
     *
     * Generated from protobuf field <code>uint32 minimum_length = 1;</code>
     */
    private $minimum_length = 0;
    /**
     * Maximum length
     *
     * Generated from protobuf field <code>uint32 maximum_length = 2;</code>
     */
    private $maximum_length = 0;
    /**
     * Must contain at least one upper case letter (A-Z)
     *
     * Generated from protobuf field <code>bool require_upper = 3;</code>
     */
    private $require_upper = false;
    /**
     * Must contain at least one lower case letter (a-z)
     *
     * Generated from protobuf field <code>bool require_lower = 4;</code>
     */
    private $require_lower = false;
    /**
     * Must contain at least one number (0-9)
     *
     * Generated from protobuf field <code>bool require_number = 5;</code>
     */
    private $require_number = false;
    /**
     * Must contain at least one of the following special characters:
     * ~ ! &#64; # $ % ^ & * , _ + - = { } |
     *
     * Generated from protobuf field <code>bool require_special = 6;</code>
     */
    private $require_special = false;
    /**
     * PCRE regular expression to validate the password. If this value
     * is set than the above parameters are ignored.
     *
     * Generated from protobuf field <code>string password_regex = 7;</code>
     */
    private $password_regex = '';
    /**
     * User friendly text to describe the custom regular expression
     *
     * Generated from protobuf field <code>string regex_description = 8;</code>
     */
    private $regex_description = '';

    public function __construct() {
        \GPBMetadata\Provider\V1Alpha\Provider::initOnce();
        parent::__construct();
    }

    /**
     * Minimum length
     *
     * Generated from protobuf field <code>uint32 minimum_length = 1;</code>
     * @return int
     */
    public function getMinimumLength()
    {
        return $this->minimum_length;
    }

    /**
     * Minimum length
     *
     * Generated from protobuf field <code>uint32 minimum_length = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMinimumLength($var)
    {
        GPBUtil::checkUint32($var);
        $this->minimum_length = $var;

        return $this;
    }

    /**
     * Maximum length
     *
     * Generated from protobuf field <code>uint32 maximum_length = 2;</code>
     * @return int
     */
    public function getMaximumLength()
    {
        return $this->maximum_length;
    }

    /**
     * Maximum length
     *
     * Generated from protobuf field <code>uint32 maximum_length = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaximumLength($var)
    {
        GPBUtil::checkUint32($var);
        $this->maximum_length = $var;

        return $this;
    }

    /**
     * Must contain at least one upper case letter (A-Z)
     *
     * Generated from protobuf field <code>bool require_upper = 3;</code>
     * @return bool
     */
    public function getRequireUpper()
    {
        return $this->require_upper;
    }

    /**
     * Must contain at least one upper case letter (A-Z)
     *
     * Generated from protobuf field <code>bool require_upper = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireUpper($var)
    {
        GPBUtil::checkBool($var);
        $this->require_upper = $var;

        return $this;
    }

    /**
     * Must contain at least one lower case letter (a-z)
     *
     * Generated from protobuf field <code>bool require_lower = 4;</code>
     * @return bool
     */
    public function getRequireLower()
    {
        return $this->require_lower;
    }

    /**
     * Must contain at least one lower case letter (a-z)
     *
     * Generated from protobuf field <code>bool require_lower = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireLower($var)
    {
        GPBUtil::checkBool($var);
        $this->require_lower = $var;

        return $this;
    }

    /**
     * Must contain at least one number (0-9)
     *
     * Generated from protobuf field <code>bool require_number = 5;</code>
     * @return bool
     */
    public function getRequireNumber()
    {
        return $this->require_number;
    }

    /**
     * Must contain at least one number (0-9)
     *
     * Generated from protobuf field <code>bool require_number = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireNumber($var)
    {
        GPBUtil::checkBool($var);
        $this->require_number = $var;

        return $this;
    }

    /**
     * Must contain at least one of the following special characters:
     * ~ ! &#64; # $ % ^ & * , _ + - = { } |
     *
     * Generated from protobuf field <code>bool require_special = 6;</code>
     * @return bool
     */
    public function getRequireSpecial()
    {
        return $this->require_special;
    }

    /**
     * Must contain at least one of the following special characters:
     * ~ ! &#64; # $ % ^ & * , _ + - = { } |
     *
     * Generated from protobuf field <code>bool require_special = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireSpecial($var)
    {
        GPBUtil::checkBool($var);
        $this->require_special = $var;

        return $this;
    }

    /**
     * PCRE regular expression to validate the password. If this value
     * is set than the above parameters are ignored.
     *
     * Generated from protobuf field <code>string password_regex = 7;</code>
     * @return string
     */
    public function getPasswordRegex()
    {
        return $this->password_regex;
    }

    /**
     * PCRE regular expression to validate the password. If this value
     * is set than the above parameters are ignored.
     *
     * Generated from protobuf field <code>string password_regex = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setPasswordRegex($var)
    {
        GPBUtil::checkString($var, True);
        $this->password_regex = $var;

        return $this;
    }

    /**
     * User friendly text to describe the custom regular expression
     *
     * Generated from protobuf field <code>string regex_description = 8;</code>
     * @return string
     */
    public function getRegexDescription()
    {
        return $this->regex_description;
    }

    /**
     * User friendly text to describe the custom regular expression
     *
     * Generated from protobuf field <code>string regex_description = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setRegexDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->regex_description = $var;

        return $this;
    }

}

